 class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        List<Integer> leaves1 = getLeaves(root1);
        List<Integer> leaves2 = getLeaves(root2);

        if(leaves1.size() != leaves2.size())
            return false;

        for(int i = 0; i < leaves1.size(); i++) {
            if(leaves1.get(i) != leaves2.get(i))
                return false;
        }

        return true;
    }

    public List<Integer> getLeaves(TreeNode root) {
        List<Integer> res =  new ArrayList<Integer>();

        if(root == null)
            return res;

        dfs(res, root);
        return res;
    }

    public void dfs(List<Integer> res, TreeNode root) {
        if(root == null)
            return;

        if(root.left == null && root.right == null){
            res.add(root.val);
            return;
        }

        dfs(res, root.left);
        dfs(res, root.right);
    }
}
